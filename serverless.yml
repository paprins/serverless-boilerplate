# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: serverless-boilerplate

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: ">=1.27.0 <2.0.0"

provider:
  name: aws
  region: ${opt:region, 'eu-west-1'}
  runtime: nodejs8.10
  stage: ${opt:stage, 'local'}
  memorySize: 128
  timeout: 30
  environment:
    SERVERLESS_STAGE: ${opt:stage, self:provider.stage}
    SERVERLESS_PROJECT: ${self:service}
  iamManagedPolicies:
    - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess


# You _can_ use SSM Parameter Store like this: `${ssm:/path/to/param}`
# See: https://serverless.com/framework/docs/providers/aws/guide/variables/#reference-variables-using-the-ssm-parameter-store
custom:
  variables: ${file(conf/${self:provider.stage}.yml)}
  deploymentSettings:
    type: ${self:custom.variables.deployment_type, 'AllAtOnce'}
    alias: ${self:custom.variables.deployment_alias, 'Live'}
    # List of stages where you want to deploy your functions gradually.
    # If not present, it assumes that are all of them.
    stages:
      - dev
      - prod

package:
  individually: true
  exclude:
    - .serverless
    - .webpack
    - coverage
    - .babelrc
    - .eslintignore
    - .eslintrc
    - .gitignore
    - LICENSE
    - package.json
    - serverless.yml
    - webpack.config.yml
    - test/**
    - .git/**

plugins:
  - serverless-offline
  - serverless-pseudo-parameters
  - serverless-webpack
  - serverless-plugin-canary-deployments

functions:
  hello:
    handler: src/hello.handler
    events:
      - http:
          path: hello
          method: post
          cors: true

resources:
  Resources:
    HelloLogGroup:
      Properties:
        RetentionInDays: 7
    HelloLambdaFunction:
      Properties:
        TracingConfig:
          Mode: Active
